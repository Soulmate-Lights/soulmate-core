// #ifdef ESP8266
// #ifndef SOULMATE_BLUETOOTH_LE
// #define SOULMATE_BLUETOOTH_LE

// #include <SoftwareSerial.h>
// #include <ArduinoJson.h>
// #include <WiFiManager.h>

// SoftwareSerial mySerial(BLUETOOTH_MODULE_TX_PIN, BLUETOOTH_MODULE_RX_PIN);

// void SoulmateLibrary::StartBluetooth() {
//   #ifndef SKIP_BLUETOOTH
//     Serial.println("Start bluetooth (ESP8266)");
//     digitalWrite(BLUETOOTH_PIN, HIGH);
//   #endif
// }

// void SoulmateLibrary::StopBluetooth() {
//   #ifndef SKIP_BLUETOOTH
//     Serial.println("Stop bluetooth");
//     digitalWrite(BLUETOOTH_PIN, LOW);
//   #endif
// }

// namespace BLE {
//   void setup() {
//     pinMode(BLUETOOTH_PIN, OUTPUT);
//     digitalWrite(BLUETOOTH_PIN, HIGH);
//     delay(300);  // Wait for chip to start up
//     mySerial.begin(9600);  // Start Serial at default speed, for first-time
//     mySerial.write("AT+BAUD8");  // Speed up serial to 115200 baud
//     mySerial.end();
//     delay(300);  // I don't know whether it takes a second to take effect
//     mySerial.begin(115200);  // full speed
//   }

//   bool setName = false;

//   void loop() {
//     // This command needs to be run in the loop() method
//     // for some reason. Otherwise it doesn't take!
//     if (!setName) {
//       setName = true;
//       mySerial.write("AT+NAMESoulmate");
//       mySerial.write("AT+NAME=Soulmate");
//     }

//     if (mySerial.available() && !Soulmate.wifiConnected()) {
//       String command = mySerial.readStringUntil('\n');
//       StaticJsonBuffer<200> jsonBuffer;
//       JsonObject& root = jsonBuffer.parseObject(command);
//       Soulmate.consumeJson(root);
//       String status = Soulmate.status();
//       mySerial.println(status);
//     }
//   }
// }

// void SoulmateLibrary::BluetoothLoop() {
//   #ifndef SKIP_BLUETOOTH
//     BLE::loop();
//   #endif
// }

// void SoulmateLibrary::BluetoothSetup() {
//   #ifndef SKIP_BLUETOOTH
//     BLE::setup();
//   #endif
// }

// #endif
// #endif